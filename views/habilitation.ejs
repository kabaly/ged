<!DOCTYPE html>
<html lang="en">
	<%-include('./component/head')%>

	<body class="hold-transition light-skin sidebar-mini theme-primary fixed">

		<div class="wrapper" id="app">
			<!--entete-->
			<%-include('./component/header')%>

			<!-- Left side column. contains the logo and sidebar -->
				<!--menu de navigation-->
				<%-include('./component/menu')%>

			<!-- Content Wrapper.
     Contains page content -->
			<div class="content-wrapper">
				<div class="modal center-modal fade" id="modal-center" tabindex="-1">
					<div class="modal-dialog">
						<div class="modal-content" style="width: 700px;">
							<div class="modal-header" style="width: 700px;">
								<h5 class="modal-title">Habilitation</h5>
								<button type="button" @click="close" class="close" data-dismiss="modal">
									<span aria-hidden="true">&times;</span>
								</button>
							</div>
							<div class="modal-body">
								<div class="form-group row">
									<label class="col-form-label col-md-2">Types</label>
									<div class="col-md-10">
										<select  id="organisme" class="form-control" type="datetime"
										v-model="editedItem.type_habilitation">
											<option value="">Selectionnez</option>
											<option
											v-for="t in types" 
											:value="t.id">{{ t.nom }}</option>
										</select>
									</div>
								</div>
								<div class="form-group row">
									<label class="col-form-label col-md-2">Nom</label>
									<div class="col-md-10">
										<input class="form-control" type="datetime" name="datetime"
											v-model="editedItem.nom">
									</div>
								</div>
								<div class="form-group row">
									<label class="col-form-label col-md-2">Description</label>
									<div class="col-md-10">
										<textarea class="form-control" rows="4" cols="30"
											v-model="editedItem.description"> </textarea>
									</div>
								</div>
							</div>
							<div class="modal-footer modal-footer-uniform">
								<button type="button" class="btn btn-md btn-secondary"
									@click="close"
									data-dismiss="modal">Quitter</button>
									<button v-if="editedIndex>-1" type="button" class="btn btn-success float-right"
										data-dismiss="modal" @click="save">modifier</button>
									<button v-else type="button" class="btn btn-success float-right"
										data-dismiss="modal" @click="save">Enrégistrer</button>
							</div>
						</div>
					</div>
				</div>


				<div class="col-12">
					<div class="box">
						<div class="box-header d-flex justify-content-between">
							<h4 class="box-title">Habilitations</h4>
							<button type="button" class="waves-effect waves-light btn btn-primary
								mb-5 btn-md bg-primary "
								data-toggle="modal" data-target="#modal-center" @click="close">Nouveau</button>
						</div>
						<div class="box-body">
							<alert-component v-bind:alert="alert">
							</alert-component>
							<div class="table-responsive">
								<table id="example1" class="table table-bordered table-striped">
									<thead>
										<tr>
											<th>Actions</th>
											<th>N°</th>
											<th>Type</th>
											<th>Nom</th>
											<th>Description</th>
										</tr>
									</thead>
									<tbody>
										<tr v-for="(hb,i) in datatable">
											<td>
												<button type="button" class="waves-effect waves-light btn
													btn-success mb-5 btn-md" @click="editItem(hb)" 
													data-toggle="modal" data-target="#modal-center"
													><i class="fa fa-edit"
													></i></button>
												<button type="button" class="waves-effect waves-light btn btn-danger mb-5 btn-md"
												data-toggle="modal" data-target="#modal-danger"
												 @click="editItem(hb)">
												<i class="fa fa-trash"></i></button>
											</td>
											<td>{{i+1}}</td>
											<td>{{ hb.type_habilitation.nom }}</td>
											<td>{{ hb.habilitation.nom }}</td>
											<td>{{ hb.habilitation.description }}</td>
										</tr>
									</tbody>
								</table>
							</div>
						</div>
					</div>
				</div>
			</div>
			<div class="modal modal-danger" id="modal-danger">
				<div class="modal-dialog" style="width: 450px;">
				  <div class="modal-content bg-danger" style="width: 450px;">
					<div class="modal-header" style="width: 450px;">
					  <h4 class="modal-title">suppression !</h4>
					  <button type="button" class="close" @click="close" data-dismiss="modal" aria-label="Close">
						<span aria-hidden="true">&times;</span></button>
					</div>
					<div class="modal-body  bg-default">
					  <h4>voulez vous supprimmer</h4>
					</div>
					<div class="modal-footer">
					  <button type="button" @click="close" class="btn btn-md btn-danger" data-dismiss="modal">Non</button>
					  <button type="button" class="btn btn-md btn-primary float-right" data-dismiss="modal" 
					  @click="deleteHabilitation">Oui</button>
					</div>
				  </div>
				  <!-- /.modal-content -->
				</div>
				<!-- /.modal-dialog -->
			   </div>
			 </div>

			<!-- /.content-wrapper -->

			<!-- Control Sidebar -->
			<!-- /.control-sidebar -->

			<!-- Add the sidebar's background. This div must be placed immediately after the control sidebar -->
		</div>
		<!-- ./wrapper -->

		<!-- Vendor JS -->
		<%-include('./component/script')%>
		<script>
		var app = new Vue({
			el: '#app',
			data: {
				datatable : null,
				editedIndex:null,
				editedItem:{
					nom: '',
                    description: '',
					type_habilitation: ''
				},
				defaultItem:{
					nom: '',
                    description: '',
					type_habilitation: ''
				},
				types: [],
				alert:null,
			},
			created(){ 
				if(JSON.parse(localStorage.getItem('token'))==null){
					//window.location="/"
				}
				this.initialise()
			},
			methods : {
				initialise(){
					new ApiService().findAll('/habilitation/crud/')
					.then(response =>{
						this.datatable = response.data.reverse()
					})
					.catch(error => {
					console.log(error)
					})
					new ApiService().findAll('/typehabilitation/crud/')
					.then((res) => {
						this.types = res.data
					}).catch((err) => {
						console.log(err)
					});
				},
				updateHabilitation(){
					if(new Alert().validateRequestData(this.editedItem)){
						new ApiService().add('/habilitation/crud/', this.editedItem,this.editedItem)
					.then( response => {
						this.alert = new Alert().flash(
								'success',
								true,
								'Modifier avec succès !'
						)
						this.datatable.push(response.data)
						console.log(response.data)
					})
					.catch(error =>{
						this.alert = new Alert().flash(
								'danger',
								true,
								"erreur de modification !"
						)
						console.log(error);
					})
					}else{
						this.alert = new Alert().flash('error', true, 'Tous les champs sont obligatoires')
					}	
				},
				addHabilitation(){
					if(new Alert().validateRequestData(this.editedItem)){
						new ApiService().add('/habilitation/crud/', this.editedItem)
					.then( response => {
						this.alert = new Alert().flash(
								'success',
								true,
								'Organisme ajouté avec succès !'
						)
						this.datatable.push(response.data)
						console.log(response.data)
					})
					.catch(error =>{
						this.alert = new Alert().flash(
								'danger',
								true,
								"erreur d'ajout !"
						)
						console.log(error);
					})
					}else{
						this.alert = new Alert().flash('error', true, 'Tous les champs sont obligatoires')
					}	
				},
				deleteHabilitation(){
					new ApiService().delete('/habilitation/crud/',this.editedItem.id)
					.then( res => {
                        this.initialize()
						this.alert = new Alert().flash(
								'success',
								true,
								'Suppression effectué !'
						)
					})
					.catch(error =>{
						console.log(error);
						this.alert = new Alert().flash(
								'danger',
								true,
								"erreur de suppression !"
							)
					})
						this.close();
				},
				close () {
					this.$nextTick(() => {
					this.editedItem = Object.assign({}, this.defaultItem)
					this.editedIndex = -1
					})
      				},
					editItem (item) {
						console.log("lancer");
						this.editedIndex = this.datatable.indexOf(item)
						console.log(this.editedIndex);
						this.editedItem = Object.assign({}, item.habilitation)
						console.log("cool",this.editedItem);
					},
					save(){
						if(this.editedIndex>-1){
							this.updateHabilitation()
						}else{
							this.addHabilitation()
						}
						this.close()
					},
			}
		})
	</script>
	</body>
</html>
